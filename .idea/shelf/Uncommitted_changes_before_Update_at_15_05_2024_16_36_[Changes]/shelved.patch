Index: mlflow-tracking-server/Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Verwende ein Basisimage, das die erforderlichen Tools enthält (z. B. Python)\r\nFROM python:3.11.7\r\n\r\n# Setze das Arbeitsverzeichnis im Container\r\nWORKDIR /app\r\n\r\nCOPY requirements.txt .\r\nRUN pip install --no-cache-dir -r requirements.txt\r\n\r\n# Kopiere die Dateien in das Arbeitsverzeichnis im Container\r\nCOPY trackingfiles_download.py .\r\nCOPY cron.sh .\r\n\r\n# Installiere die Python-Abhängigkeiten\r\nRUN apt-get update && apt-get install -y cron\r\n\r\nEXPOSE 5000\r\n\r\n# Setze Berechtigungen für das Cron-Script und führe es aus\r\nRUN chmod +x /app/cron.sh\r\n\r\n# Füge das Cron-Job zur Crontab hinzu\r\nRUN crontab /app/cron.sh\r\n\r\n# Starte den Cron-Dienst und den MLflow-Server\r\nCMD service cron start && mlflow server --host 0.0.0.0\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mlflow-tracking-server/Dockerfile b/mlflow-tracking-server/Dockerfile
--- a/mlflow-tracking-server/Dockerfile	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ b/mlflow-tracking-server/Dockerfile	(date 1715619087471)
@@ -8,6 +8,7 @@
 RUN pip install --no-cache-dir -r requirements.txt
 
 # Kopiere die Dateien in das Arbeitsverzeichnis im Container
+COPY .env .
 COPY trackingfiles_download.py .
 COPY cron.sh .
 
Index: mlflow-tracking-server/trackingfiles_download.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport boto3\r\nimport zipfile\r\nimport yaml\r\n\r\n\r\ndef download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):\r\n    # Liste aller Objekte im MLflow-Bucket abrufen\r\n    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']\r\n\r\n    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert\r\n    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')\r\n    os.makedirs(mlruns_dir, exist_ok=True)\r\n\r\n    # Durch jedes Objekt im MLflow-Bucket iterieren\r\n    for obj in mlflow_objects:\r\n        # Objekt-Key abrufen\r\n        obj_key = obj['Key']\r\n\r\n        # Datei herunterladen\r\n        local_file_path = os.path.join(mlruns_dir, obj_key)\r\n        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)\r\n\r\n        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist\r\n        if obj_key.endswith('.zip'):\r\n            # Zip-Datei entpacken\r\n            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:\r\n                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))\r\n            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde\r\n            os.remove(local_file_path)\r\n\r\n            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen\r\n            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])\r\n            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')\r\n\r\n            # Den artifact_uri in der meta.yaml-Datei aktualisieren\r\n            with open(meta_yaml_path, 'r') as meta_file:\r\n                meta_data = yaml.safe_load(meta_file)\r\n\r\n            # Aktuellen Pfad des Skripts ermitteln\r\n            script_path = os.path.dirname(os.path.realpath(__file__))\r\n            # Aktuellen Run-ID ermitteln\r\n            run_id = os.path.basename(run_dir)\r\n            # Pfad zur artefakt_uri erstellen\r\n            artifact_uri = os.path.abspath(os.path.join(script_path, 'mlruns', '0', run_id, 'artifacts'))\r\n\r\n            # Neuen absoluten Pfad zur artefakt_uri verwenden\r\n            meta_data['artifact_uri'] = f'file://{artifact_uri}'\r\n\r\n            with open(meta_yaml_path, 'w') as meta_file:\r\n                yaml.safe_dump(meta_data, meta_file)\r\n\r\n    # Herunterladen der meta.yaml-Datei aus dem \"modelconfigs\"-Bucket\r\n    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')\r\n    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # Bucket-Namen und lokales Verzeichnis festlegen\r\n    mlflow_bucket_name = os.getenv(\"MLFLOW_BUCKET\")\r\n    modelconfigs_bucket_name = os.getenv(\"MODEL_CONFIG_BUCKET\")\r\n\r\n    local_directory = '/app'\r\n\r\n    # Zugangsdaten\r\n    access_key_id = os.getenv(\"AWS_ACCESS_KEY_ID\")\r\n    secret_access_key = os.getenv(\"AWS_SECRET_ACCESS_KEY\")\r\n    endpoint_url = os.getenv(\"AWS_SECRET_ACCESS_KEY\")\r\n\r\n    # Verbindung zum S3-Client herstellen\r\n    s3_client = boto3.client('s3',\r\n                             aws_access_key_id=access_key_id,\r\n                             aws_secret_access_key=secret_access_key,\r\n                             endpoint_url=endpoint_url)\r\n\r\n    # MLflow-Runs herunterladen und Zip-Dateien entpacken\r\n    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)\r\n    print(local_directory)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mlflow-tracking-server/trackingfiles_download.py b/mlflow-tracking-server/trackingfiles_download.py
--- a/mlflow-tracking-server/trackingfiles_download.py	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ b/mlflow-tracking-server/trackingfiles_download.py	(date 1715621192890)
@@ -57,7 +57,8 @@
 
 if __name__ == "__main__":
     # Bucket-Namen und lokales Verzeichnis festlegen
-    mlflow_bucket_name = os.getenv("MLFLOW_BUCKET")
+    #mlflow_bucket_name = os.getenv("MLFLOW_BUCKET")
+    mlflow_bucket_name = "mlflowtracking"
     modelconfigs_bucket_name = os.getenv("MODEL_CONFIG_BUCKET")
 
     local_directory = '/app'
@@ -65,7 +66,7 @@
     # Zugangsdaten
     access_key_id = os.getenv("AWS_ACCESS_KEY_ID")
     secret_access_key = os.getenv("AWS_SECRET_ACCESS_KEY")
-    endpoint_url = os.getenv("AWS_SECRET_ACCESS_KEY")
+    endpoint_url = os.getenv("ENDPOINT_URL")
 
     # Verbindung zum S3-Client herstellen
     s3_client = boto3.client('s3',
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]" date="1715157636744" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 10:40 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,34 +0,0 @@
-Index: src/trackingfiles_download.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import os\r\nimport boto3\r\nimport zipfile\r\nimport yaml\r\n\r\n\r\ndef download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):\r\n    # Liste aller Objekte im MLflow-Bucket abrufen\r\n    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']\r\n\r\n    # Ludwig-Konfigurationsdatei und Modellname extrahieren\r\n    ludwig_config_file_name = \"ludwig_MLCore.yaml\"\r\n    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)\r\n\r\n    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert\r\n    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')\r\n    os.makedirs(mlruns_dir, exist_ok=True)\r\n\r\n    # Durch jedes Objekt im MLflow-Bucket iterieren\r\n    for obj in mlflow_objects:\r\n        # Objekt-Key abrufen\r\n        obj_key = obj['Key']\r\n\r\n        # Datei herunterladen\r\n        local_file_path = os.path.join(mlruns_dir, obj_key)\r\n        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)\r\n\r\n        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist\r\n        if obj_key.endswith('.zip'):\r\n            # Zip-Datei entpacken\r\n            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:\r\n                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))\r\n            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde\r\n            os.remove(local_file_path)\r\n\r\n            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen\r\n            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])\r\n            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')\r\n\r\n            # Den artifact_uri in der meta.yaml-Datei aktualisieren\r\n            with open(meta_yaml_path, 'r') as meta_file:\r\n                meta_data = yaml.safe_load(meta_file)\r\n\r\n            # Aktuellen Pfad des Skripts ermitteln\r\n            script_path = os.path.dirname(os.path.realpath(__file__))\r\n            # Aktuellen Run-ID ermitteln\r\n            run_id = os.path.basename(run_dir)\r\n            # Pfad zur artefakt_uri erstellen\r\n            artifact_uri = os.path.abspath(os.path.join(script_path, '..', 'mlruns', '0', run_id, 'artifacts'))\r\n\r\n            # Neuen absoluten Pfad zur artefakt_uri verwenden\r\n            meta_data['artifact_uri'] = f'file://{artifact_uri}'\r\n\r\n            with open(meta_yaml_path, 'w') as meta_file:\r\n                yaml.safe_dump(meta_data, meta_file)\r\n\r\n    # Herunterladen der meta.yaml-Datei aus dem \"modelconfigs\"-Bucket\r\n    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')\r\n    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)\r\n\r\n\r\ndef extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):\r\n    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen\r\n    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)\r\n    ludwig_config_content = obj['Body'].read().decode('utf-8')\r\n\r\n    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren\r\n    yaml_content = yaml.safe_load(ludwig_config_content)\r\n    if 'model' in yaml_content and 'type' in yaml_content['model']:\r\n        model_name = yaml_content['model']['type']\r\n        return model_name\r\n    else:\r\n        raise ValueError(\"Model name not found in Ludwig config file.\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    # Bucket-Namen und lokales Verzeichnis festlegen\r\n    mlflow_bucket_name = \"mlflowtracking\"\r\n    modelconfigs_bucket_name = \"modelconfigs\"\r\n    local_directory = os.path.join(os.getcwd(), '..')  # Eine Ebene höher im Ordner MLOPS\r\n\r\n    # Zugangsdaten\r\n    access_key_id = \"test\"\r\n    secret_access_key = \"testpassword\"\r\n    endpoint_url = \"http://85.215.53.91:9000\"\r\n\r\n    # Verbindung zum S3-Client herstellen\r\n    s3_client = boto3.client('s3',\r\n                             aws_access_key_id=access_key_id,\r\n                             aws_secret_access_key=secret_access_key,\r\n                             endpoint_url=endpoint_url)\r\n\r\n    # MLflow-Runs herunterladen und Zip-Dateien entpacken\r\n    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
---- a/src/trackingfiles_download.py	(revision fa5c2a79e7e897e5011ac536bfa2269f017f3013)
-+++ b/src/trackingfiles_download.py	(date 1715157630708)
-@@ -46,7 +46,7 @@
-             # Aktuellen Run-ID ermitteln
-             run_id = os.path.basename(run_dir)
-             # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, '..', 'mlruns', '0', run_id, 'artifacts'))
-+            artifact_uri = os.path.abspath(os.path.join(script_path, 'mlruns', '0', run_id, 'artifacts'))
- 
-             # Neuen absoluten Pfad zur artefakt_uri verwenden
-             meta_data['artifact_uri'] = f'file://{artifact_uri}'
-@@ -77,7 +77,8 @@
-     # Bucket-Namen und lokales Verzeichnis festlegen
-     mlflow_bucket_name = "mlflowtracking"
-     modelconfigs_bucket_name = "modelconfigs"
--    local_directory = os.path.join(os.getcwd(), '..')  # Eine Ebene höher im Ordner MLOPS
-+    local_directory = '/app'
-+
- 
-     # Zugangsdaten
-     access_key_id = "test"
-@@ -92,3 +93,4 @@
- 
-     # MLflow-Runs herunterladen und Zip-Dateien entpacken
-     download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
-+    print(local_directory)
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,101 +0,0 @@
-Index: src/trackingfiles_download.py
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
-deleted file mode 100644
---- a/src/trackingfiles_download.py	(revision fa5c2a79e7e897e5011ac536bfa2269f017f3013)
-+++ /dev/null	(revision fa5c2a79e7e897e5011ac536bfa2269f017f3013)
-@@ -1,94 +0,0 @@
--import os
--import boto3
--import zipfile
--import yaml
--
--
--def download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):
--    # Liste aller Objekte im MLflow-Bucket abrufen
--    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']
--
--    # Ludwig-Konfigurationsdatei und Modellname extrahieren
--    ludwig_config_file_name = "ludwig_MLCore.yaml"
--    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)
--
--    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert
--    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')
--    os.makedirs(mlruns_dir, exist_ok=True)
--
--    # Durch jedes Objekt im MLflow-Bucket iterieren
--    for obj in mlflow_objects:
--        # Objekt-Key abrufen
--        obj_key = obj['Key']
--
--        # Datei herunterladen
--        local_file_path = os.path.join(mlruns_dir, obj_key)
--        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)
--
--        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist
--        if obj_key.endswith('.zip'):
--            # Zip-Datei entpacken
--            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:
--                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))
--            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde
--            os.remove(local_file_path)
--
--            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen
--            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])
--            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')
--
--            # Den artifact_uri in der meta.yaml-Datei aktualisieren
--            with open(meta_yaml_path, 'r') as meta_file:
--                meta_data = yaml.safe_load(meta_file)
--
--            # Aktuellen Pfad des Skripts ermitteln
--            script_path = os.path.dirname(os.path.realpath(__file__))
--            # Aktuellen Run-ID ermitteln
--            run_id = os.path.basename(run_dir)
--            # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, '..', 'mlruns', '0', run_id, 'artifacts'))
--
--            # Neuen absoluten Pfad zur artefakt_uri verwenden
--            meta_data['artifact_uri'] = f'file://{artifact_uri}'
--
--            with open(meta_yaml_path, 'w') as meta_file:
--                yaml.safe_dump(meta_data, meta_file)
--
--    # Herunterladen der meta.yaml-Datei aus dem "modelconfigs"-Bucket
--    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')
--    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)
--
--
--def extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):
--    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen
--    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)
--    ludwig_config_content = obj['Body'].read().decode('utf-8')
--
--    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren
--    yaml_content = yaml.safe_load(ludwig_config_content)
--    if 'model' in yaml_content and 'type' in yaml_content['model']:
--        model_name = yaml_content['model']['type']
--        return model_name
--    else:
--        raise ValueError("Model name not found in Ludwig config file.")
--
--
--if __name__ == "__main__":
--    # Bucket-Namen und lokales Verzeichnis festlegen
--    mlflow_bucket_name = "mlflowtracking"
--    modelconfigs_bucket_name = "modelconfigs"
--    local_directory = os.path.join(os.getcwd(), '..')  # Eine Ebene höher im Ordner MLOPS
--
--    # Zugangsdaten
--    access_key_id = "test"
--    secret_access_key = "testpassword"
--    endpoint_url = "http://85.215.53.91:9000"
--
--    # Verbindung zum S3-Client herstellen
--    s3_client = boto3.client('s3',
--                             aws_access_key_id=access_key_id,
--                             aws_secret_access_key=secret_access_key,
--                             endpoint_url=endpoint_url)
--
--    # MLflow-Runs herunterladen und Zip-Dateien entpacken
--    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]" date="1715157839323" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 10:43 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]" date="1715157849744" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 08.05.2024 10:44 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]" date="1715155036846" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 09:57 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="minio.env" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,103 +0,0 @@
-Index: src/trackingfiles_download.py
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
-deleted file mode 100644
---- a/src/trackingfiles_download.py	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,96 +0,0 @@
--import os
--import boto3
--import zipfile
--import yaml
--
--
--def download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):
--    # Liste aller Objekte im MLflow-Bucket abrufen
--    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']
--
--    # Ludwig-Konfigurationsdatei und Modellname extrahieren
--    ludwig_config_file_name = "ludwig_MLCore.yaml"
--    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)
--
--    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert
--    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')
--    os.makedirs(mlruns_dir, exist_ok=True)
--
--    # Durch jedes Objekt im MLflow-Bucket iterieren
--    for obj in mlflow_objects:
--        # Objekt-Key abrufen
--        obj_key = obj['Key']
--
--        # Datei herunterladen
--        local_file_path = os.path.join(mlruns_dir, obj_key)
--        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)
--
--        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist
--        if obj_key.endswith('.zip'):
--            # Zip-Datei entpacken
--            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:
--                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))
--            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde
--            os.remove(local_file_path)
--
--            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen
--            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])
--            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')
--
--            # Den artifact_uri in der meta.yaml-Datei aktualisieren
--            with open(meta_yaml_path, 'r') as meta_file:
--                meta_data = yaml.safe_load(meta_file)
--
--            # Aktuellen Pfad des Skripts ermitteln
--            script_path = os.path.dirname(os.path.realpath(__file__))
--            # Aktuellen Run-ID ermitteln
--            run_id = os.path.basename(run_dir)
--            # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, 'mlruns', '0', run_id, 'artifacts'))
--
--            # Neuen absoluten Pfad zur artefakt_uri verwenden
--            meta_data['artifact_uri'] = f'file://{artifact_uri}'
--
--            with open(meta_yaml_path, 'w') as meta_file:
--                yaml.safe_dump(meta_data, meta_file)
--
--    # Herunterladen der meta.yaml-Datei aus dem "modelconfigs"-Bucket
--    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')
--    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)
--
--
--def extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):
--    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen
--    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)
--    ludwig_config_content = obj['Body'].read().decode('utf-8')
--
--    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren
--    yaml_content = yaml.safe_load(ludwig_config_content)
--    if 'model' in yaml_content and 'type' in yaml_content['model']:
--        model_name = yaml_content['model']['type']
--        return model_name
--    else:
--        raise ValueError("Model name not found in Ludwig config file.")
--
--
--if __name__ == "__main__":
--    # Bucket-Namen und lokales Verzeichnis festlegen
--    mlflow_bucket_name = "mlflowtracking"
--    modelconfigs_bucket_name = "modelconfigs"
--    local_directory = '/app'
--
--
--    # Zugangsdaten
--    access_key_id = "test"
--    secret_access_key = "testpassword"
--    endpoint_url = "http://85.215.53.91:9000"
--
--    # Verbindung zum S3-Client herstellen
--    s3_client = boto3.client('s3',
--                             aws_access_key_id=access_key_id,
--                             aws_secret_access_key=secret_access_key,
--                             endpoint_url=endpoint_url)
--
--    # MLflow-Runs herunterladen und Zip-Dateien entpacken
--    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
--    print(local_directory)
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,624 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]" date="1715157742720" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 10:42 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/tags/mlflow.source.type" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/tags/mlflow.source.git.commit" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/params/Stock" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/tags/mlflow.user" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/tags/mlflow.source.git.commit" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/tags/mlflow.user" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/params/data_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/tags/mlflow.runName" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/params/ludwig_config_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/tags/mlflow.source.name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/tags/mlflow.runName" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/params/ludwig_config_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/params/Stock" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/tags/mlflow.user" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/tags/mlflow.source.name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/tags/mlflow.source.name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/params/ludwig_config_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/params/Stock" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/tags/mlflow.user" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/tags/mlflow.source.git.commit" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/training_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/params/ludwig_config_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/model_weights" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/tags/mlflow.runName" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/tags/mlflow.runName" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/model_weights" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/training_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/params/Model" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/validation_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/params/Stock" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/params/data_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/tags/mlflow.source.type" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/test_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/test_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/params/Model" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/tags/mlflow.source.name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/tags/mlflow.source.type" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/params/data_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/tags/mlflow.source.type" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/validation_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/training_r2" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/tags/mlflow.source.git.commit" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_mean_absolute_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/metrics/validation_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_mean_absolute_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_root_mean_squared_percentage_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/params/data_file_name" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/params/Model" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/model_weights" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/8e30b65e41fb456c98981d1090f073cd/metrics/training_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/validation_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/model_weights" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/390a3f35c9924c70955b2312f365efd3/metrics/test_root_mean_squared_error" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/metrics/test_loss" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" value="mlruns/0/098bd50384a246b18ba1fd6d10930de2/params/Model" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4440 +0,0 @@
-Index: mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/training_set_metadata.json
-===================================================================
-diff --git a/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/training_set_metadata.json b/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/training_set_metadata.json
-deleted file mode 100644
---- a/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/training_set_metadata.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,100 +0,0 @@
--{
--    "Datum": {
--        "preprocessing": {
--            "computed_fill_value": "",
--            "datetime_format": null,
--            "fill_value": "",
--            "missing_value_strategy": "fill_with_const"
--        }
--    },
--    "EMA": {
--        "mean": 71.66910552978516,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 101.56829071044922
--    },
--    "Eroeffnung": {
--        "mean": 306.9889831542969,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 290.2434997558594
--    },
--    "RSI": {
--        "mean": 52.71760559082031,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 13.437446594238281
--    },
--    "Schluss": {
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "drop_row",
--            "normalization": null,
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        }
--    },
--    "Tageshoch": {
--        "mean": 313.6554260253906,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 298.085205078125
--    },
--    "Tagestief": {
--        "mean": 299.9818115234375,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 282.0718078613281
--    },
--    "Umsatz": {
--        "mean": 22810284.0,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 39810652.0
--    },
--    "checksum": "6T7sdsJRghQTphX1oyOFVA=="
--}
-\ No newline at end of file
-Index: mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/training_set_metadata.json
-===================================================================
-diff --git a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/training_set_metadata.json b/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/training_set_metadata.json
-deleted file mode 100644
---- a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/training_set_metadata.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,100 +0,0 @@
--{
--    "Datum": {
--        "preprocessing": {
--            "computed_fill_value": "",
--            "datetime_format": null,
--            "fill_value": "",
--            "missing_value_strategy": "fill_with_const"
--        }
--    },
--    "EMA": {
--        "mean": 71.66910552978516,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 101.56829071044922
--    },
--    "Eroeffnung": {
--        "mean": 306.9889831542969,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 290.2434997558594
--    },
--    "RSI": {
--        "mean": 52.71760559082031,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 13.437446594238281
--    },
--    "Schluss": {
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "drop_row",
--            "normalization": null,
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        }
--    },
--    "Tageshoch": {
--        "mean": 313.6554260253906,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 298.085205078125
--    },
--    "Tagestief": {
--        "mean": 299.9818115234375,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 282.0718078613281
--    },
--    "Umsatz": {
--        "mean": 22810284.0,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 39810652.0
--    },
--    "checksum": "SFtnjrBIGj19yhE36_3DMA=="
--}
-\ No newline at end of file
-Index: mlruns/0/meta.yaml
-===================================================================
-diff --git a/mlruns/0/meta.yaml b/mlruns/0/meta.yaml
-deleted file mode 100644
---- a/mlruns/0/meta.yaml	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,6 +0,0 @@
--artifact_location: ./mlruns/0
--creation_time: 1709331762820
--experiment_id: '0'
--last_update_time: 1709331762820
--lifecycle_stage: active
--name: Default
-Index: mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/model_hyperparameters.json
-===================================================================
-diff --git a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/model_hyperparameters.json b/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/model_hyperparameters.json
-deleted file mode 100644
---- a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/model_hyperparameters.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,943 +0,0 @@
--{
--    "backend": null,
--    "combiner": {
--        "activation": "relu",
--        "bias_initializer": "zeros",
--        "dropout": 0.0,
--        "fc_layers": null,
--        "flatten_inputs": false,
--        "norm": null,
--        "norm_params": null,
--        "num_fc_layers": 0,
--        "output_size": 256,
--        "residual": false,
--        "type": "concat",
--        "use_bias": true,
--        "weights_initializer": "xavier_uniform"
--    },
--    "defaults": {
--        "audio": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "audio_file_length_limit_in_s": 7.5,
--                "computed_fill_value": null,
--                "fill_value": null,
--                "in_memory": true,
--                "missing_value_strategy": "bfill",
--                "norm": null,
--                "num_fft_points": null,
--                "num_filter_bands": 80,
--                "padding_value": 0.0,
--                "type": "fbank",
--                "window_length_in_s": 0.04,
--                "window_shift_in_s": 0.02,
--                "window_type": "hamming"
--            }
--        },
--        "bag": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "force_embedding_size": false,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "binary": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "confidence_penalty": 0,
--                "positive_class_weight": null,
--                "robust_lambda": 0,
--                "type": "binary_weighted_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fallback_true_label": null,
--                "fill_value": null,
--                "missing_value_strategy": "fill_with_false"
--            }
--        },
--        "category": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_initializer": null,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "pretrained_embeddings": null,
--                "skip": false,
--                "type": "dense",
--                "vocab": null
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "softmax_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000
--            }
--        },
--        "date": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "h3": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "reduce_output": "sum",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": 576495936675512319,
--                "fill_value": 576495936675512319,
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "image": {
--            "augmentation": [],
--            "encoder": {
--                "conv_activation": "relu",
--                "conv_dropout": 0.0,
--                "conv_layers": null,
--                "conv_norm": null,
--                "conv_norm_params": null,
--                "conv_use_bias": true,
--                "dilation": 1,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "groups": 1,
--                "height": null,
--                "kernel_size": 3,
--                "num_channels": null,
--                "num_conv_layers": null,
--                "num_fc_layers": 1,
--                "out_channels": 32,
--                "output_size": 128,
--                "padding": "valid",
--                "padding_mode": "zeros",
--                "pool_dilation": 1,
--                "pool_function": "max",
--                "pool_kernel_size": 2,
--                "pool_padding": 0,
--                "pool_stride": null,
--                "skip": false,
--                "stride": 1,
--                "type": "stacked_cnn",
--                "width": null
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fill_value": null,
--                "height": null,
--                "in_memory": true,
--                "infer_image_dimensions": true,
--                "infer_image_max_height": 256,
--                "infer_image_max_width": 256,
--                "infer_image_num_channels": true,
--                "infer_image_sample_size": 100,
--                "missing_value_strategy": "bfill",
--                "num_channels": null,
--                "num_processes": 1,
--                "requires_equal_dimensions": false,
--                "resize_method": "interpolate",
--                "standardize_image": null,
--                "width": null
--            }
--        },
--        "number": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            }
--        },
--        "sequence": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "max_sequence_length": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "vocab": null,
--                "weights_initializer": "uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "sequence_length": null,
--                "tokenizer": "space",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "set": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_weights": null,
--                "type": "sigmoid_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "text": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "compute_idf": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": true,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "pretrained_model_name_or_path": null,
--                "prompt": {
--                    "retrieval": {
--                        "index_name": null,
--                        "k": 0,
--                        "model_name": null,
--                        "type": null
--                    },
--                    "task": null,
--                    "template": null
--                },
--                "sequence_length": null,
--                "tokenizer": "space_punct",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "timeseries": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "delta": 1.0,
--                "type": "huber",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "padding": "right",
--                "padding_value": 0.0,
--                "timeseries_length_limit": 256,
--                "tokenizer": "space",
--                "window_size": 0
--            }
--        },
--        "vector": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "fc_layers": null,
--                "input_size": null,
--                "norm": null,
--                "norm_params": null,
--                "num_layers": 1,
--                "output_size": 256,
--                "skip": false,
--                "type": "dense",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "vector_size": null
--            }
--        }
--    },
--    "hyperopt": null,
--    "input_features": [
--        {
--            "active": true,
--            "column": "Datum",
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "name": "Datum",
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            },
--            "proc_column": "Datum_KreTWx",
--            "tied": null,
--            "type": "date"
--        },
--        {
--            "active": true,
--            "column": "Eroeffnung",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Eroeffnung",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Eroeffnung_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tageshoch",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tageshoch",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tageshoch_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tagestief",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tagestief",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tagestief_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Umsatz",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Umsatz",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Umsatz_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "RSI",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "RSI",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "RSI_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "EMA",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "EMA",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "EMA_sMoadH",
--            "tied": null,
--            "type": "number"
--        }
--    ],
--    "ludwig_version": "0.8.6",
--    "model_type": "ecd",
--    "output_features": [
--        {
--            "active": true,
--            "clip": null,
--            "column": "Schluss",
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 75,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "default_validation_metric": "mean_squared_error",
--            "dependencies": [],
--            "input_size": 75,
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "name": "Schluss",
--            "num_classes": null,
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "drop_row",
--                "normalization": null,
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Schluss_VO1XAD",
--            "reduce_dependencies": "sum",
--            "reduce_input": "sum",
--            "type": "number"
--        }
--    ],
--    "preprocessing": {
--        "global_max_sequence_length": null,
--        "oversample_minority": null,
--        "sample_ratio": 1.0,
--        "sample_size": null,
--        "split": {
--            "probabilities": [
--                0.7,
--                0.1,
--                0.2
--            ],
--            "type": "random"
--        },
--        "undersample_majority": null
--    },
--    "trainer": {
--        "batch_size": 32,
--        "bucketing_field": null,
--        "checkpoints_per_epoch": 0,
--        "compile": false,
--        "early_stop": 5,
--        "effective_batch_size": "auto",
--        "enable_gradient_checkpointing": false,
--        "enable_profiling": false,
--        "epochs": 3,
--        "eval_batch_size": 4,
--        "evaluate_training_set": false,
--        "gradient_accumulation_steps": 1,
--        "gradient_clipping": {
--            "clipglobalnorm": 0.5,
--            "clipnorm": null,
--            "clipvalue": null
--        },
--        "increase_batch_size_eval_metric": "loss",
--        "increase_batch_size_eval_split": "training",
--        "increase_batch_size_on_plateau": 0,
--        "increase_batch_size_on_plateau_patience": 5,
--        "increase_batch_size_on_plateau_rate": 2.0,
--        "learning_rate": 0.001,
--        "learning_rate_scaling": "linear",
--        "learning_rate_scheduler": {
--            "decay": null,
--            "decay_rate": 0.96,
--            "decay_steps": 10000,
--            "eta_min": 0,
--            "reduce_eval_metric": "loss",
--            "reduce_eval_split": "training",
--            "reduce_on_plateau": 0,
--            "reduce_on_plateau_patience": 10,
--            "reduce_on_plateau_rate": 0.1,
--            "staircase": false,
--            "t_0": null,
--            "t_mult": 1,
--            "warmup_evaluations": 0,
--            "warmup_fraction": 0.0
--        },
--        "max_batch_size": 1099511627776,
--        "optimizer": {
--            "amsgrad": false,
--            "betas": [
--                0.9,
--                0.999
--            ],
--            "eps": 1e-08,
--            "type": "adam",
--            "weight_decay": 0.0
--        },
--        "profiler": {
--            "active": 3,
--            "repeat": 5,
--            "skip_first": 0,
--            "wait": 1,
--            "warmup": 1
--        },
--        "regularization_lambda": 0.0,
--        "regularization_type": "l2",
--        "should_shuffle": true,
--        "skip_all_evaluation": false,
--        "steps_per_checkpoint": 0,
--        "train_steps": null,
--        "use_mixed_precision": false,
--        "validation_field": "Schluss",
--        "validation_metric": "mean_squared_error"
--    }
--}
-\ No newline at end of file
-Index: mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/model_hyperparameters.json
-===================================================================
-diff --git a/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/model_hyperparameters.json b/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/model_hyperparameters.json
-deleted file mode 100644
---- a/mlruns/0/390a3f35c9924c70955b2312f365efd3/artifacts/deep_lstm/model_hyperparameters.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,943 +0,0 @@
--{
--    "backend": null,
--    "combiner": {
--        "activation": "relu",
--        "bias_initializer": "zeros",
--        "dropout": 0.0,
--        "fc_layers": null,
--        "flatten_inputs": false,
--        "norm": null,
--        "norm_params": null,
--        "num_fc_layers": 0,
--        "output_size": 256,
--        "residual": false,
--        "type": "concat",
--        "use_bias": true,
--        "weights_initializer": "xavier_uniform"
--    },
--    "defaults": {
--        "audio": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "audio_file_length_limit_in_s": 7.5,
--                "computed_fill_value": null,
--                "fill_value": null,
--                "in_memory": true,
--                "missing_value_strategy": "bfill",
--                "norm": null,
--                "num_fft_points": null,
--                "num_filter_bands": 80,
--                "padding_value": 0.0,
--                "type": "fbank",
--                "window_length_in_s": 0.04,
--                "window_shift_in_s": 0.02,
--                "window_type": "hamming"
--            }
--        },
--        "bag": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "force_embedding_size": false,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "binary": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "confidence_penalty": 0,
--                "positive_class_weight": null,
--                "robust_lambda": 0,
--                "type": "binary_weighted_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fallback_true_label": null,
--                "fill_value": null,
--                "missing_value_strategy": "fill_with_false"
--            }
--        },
--        "category": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_initializer": null,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "pretrained_embeddings": null,
--                "skip": false,
--                "type": "dense",
--                "vocab": null
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "softmax_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000
--            }
--        },
--        "date": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "h3": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "reduce_output": "sum",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": 576495936675512319,
--                "fill_value": 576495936675512319,
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "image": {
--            "augmentation": [],
--            "encoder": {
--                "conv_activation": "relu",
--                "conv_dropout": 0.0,
--                "conv_layers": null,
--                "conv_norm": null,
--                "conv_norm_params": null,
--                "conv_use_bias": true,
--                "dilation": 1,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "groups": 1,
--                "height": null,
--                "kernel_size": 3,
--                "num_channels": null,
--                "num_conv_layers": null,
--                "num_fc_layers": 1,
--                "out_channels": 32,
--                "output_size": 128,
--                "padding": "valid",
--                "padding_mode": "zeros",
--                "pool_dilation": 1,
--                "pool_function": "max",
--                "pool_kernel_size": 2,
--                "pool_padding": 0,
--                "pool_stride": null,
--                "skip": false,
--                "stride": 1,
--                "type": "stacked_cnn",
--                "width": null
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fill_value": null,
--                "height": null,
--                "in_memory": true,
--                "infer_image_dimensions": true,
--                "infer_image_max_height": 256,
--                "infer_image_max_width": 256,
--                "infer_image_num_channels": true,
--                "infer_image_sample_size": 100,
--                "missing_value_strategy": "bfill",
--                "num_channels": null,
--                "num_processes": 1,
--                "requires_equal_dimensions": false,
--                "resize_method": "interpolate",
--                "standardize_image": null,
--                "width": null
--            }
--        },
--        "number": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            }
--        },
--        "sequence": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "max_sequence_length": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "vocab": null,
--                "weights_initializer": "uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "sequence_length": null,
--                "tokenizer": "space",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "set": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_weights": null,
--                "type": "sigmoid_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "text": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "compute_idf": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": true,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "pretrained_model_name_or_path": null,
--                "prompt": {
--                    "retrieval": {
--                        "index_name": null,
--                        "k": 0,
--                        "model_name": null,
--                        "type": null
--                    },
--                    "task": null,
--                    "template": null
--                },
--                "sequence_length": null,
--                "tokenizer": "space_punct",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "timeseries": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "delta": 1.0,
--                "type": "huber",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "padding": "right",
--                "padding_value": 0.0,
--                "timeseries_length_limit": 256,
--                "tokenizer": "space",
--                "window_size": 0
--            }
--        },
--        "vector": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "fc_layers": null,
--                "input_size": null,
--                "norm": null,
--                "norm_params": null,
--                "num_layers": 1,
--                "output_size": 256,
--                "skip": false,
--                "type": "dense",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "vector_size": null
--            }
--        }
--    },
--    "hyperopt": null,
--    "input_features": [
--        {
--            "active": true,
--            "column": "Datum",
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "name": "Datum",
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            },
--            "proc_column": "Datum_KreTWx",
--            "tied": null,
--            "type": "date"
--        },
--        {
--            "active": true,
--            "column": "Eroeffnung",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Eroeffnung",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Eroeffnung_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tageshoch",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tageshoch",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tageshoch_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tagestief",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tagestief",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tagestief_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Umsatz",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Umsatz",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Umsatz_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "RSI",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "RSI",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "RSI_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "EMA",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "EMA",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "EMA_sMoadH",
--            "tied": null,
--            "type": "number"
--        }
--    ],
--    "ludwig_version": "0.8.6",
--    "model_type": "ecd",
--    "output_features": [
--        {
--            "active": true,
--            "clip": null,
--            "column": "Schluss",
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 75,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "default_validation_metric": "mean_squared_error",
--            "dependencies": [],
--            "input_size": 75,
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "name": "Schluss",
--            "num_classes": null,
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "drop_row",
--                "normalization": null,
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Schluss_VO1XAD",
--            "reduce_dependencies": "sum",
--            "reduce_input": "sum",
--            "type": "number"
--        }
--    ],
--    "preprocessing": {
--        "global_max_sequence_length": null,
--        "oversample_minority": null,
--        "sample_ratio": 1.0,
--        "sample_size": null,
--        "split": {
--            "probabilities": [
--                0.7,
--                0.1,
--                0.2
--            ],
--            "type": "random"
--        },
--        "undersample_majority": null
--    },
--    "trainer": {
--        "batch_size": 32,
--        "bucketing_field": null,
--        "checkpoints_per_epoch": 0,
--        "compile": false,
--        "early_stop": 5,
--        "effective_batch_size": "auto",
--        "enable_gradient_checkpointing": false,
--        "enable_profiling": false,
--        "epochs": 3,
--        "eval_batch_size": 8,
--        "evaluate_training_set": false,
--        "gradient_accumulation_steps": 1,
--        "gradient_clipping": {
--            "clipglobalnorm": 0.5,
--            "clipnorm": null,
--            "clipvalue": null
--        },
--        "increase_batch_size_eval_metric": "loss",
--        "increase_batch_size_eval_split": "training",
--        "increase_batch_size_on_plateau": 0,
--        "increase_batch_size_on_plateau_patience": 5,
--        "increase_batch_size_on_plateau_rate": 2.0,
--        "learning_rate": 0.001,
--        "learning_rate_scaling": "linear",
--        "learning_rate_scheduler": {
--            "decay": null,
--            "decay_rate": 0.96,
--            "decay_steps": 10000,
--            "eta_min": 0,
--            "reduce_eval_metric": "loss",
--            "reduce_eval_split": "training",
--            "reduce_on_plateau": 0,
--            "reduce_on_plateau_patience": 10,
--            "reduce_on_plateau_rate": 0.1,
--            "staircase": false,
--            "t_0": null,
--            "t_mult": 1,
--            "warmup_evaluations": 0,
--            "warmup_fraction": 0.0
--        },
--        "max_batch_size": 1099511627776,
--        "optimizer": {
--            "amsgrad": false,
--            "betas": [
--                0.9,
--                0.999
--            ],
--            "eps": 1e-08,
--            "type": "adam",
--            "weight_decay": 0.0
--        },
--        "profiler": {
--            "active": 3,
--            "repeat": 5,
--            "skip_first": 0,
--            "wait": 1,
--            "warmup": 1
--        },
--        "regularization_lambda": 0.0,
--        "regularization_type": "l2",
--        "should_shuffle": true,
--        "skip_all_evaluation": false,
--        "steps_per_checkpoint": 0,
--        "train_steps": null,
--        "use_mixed_precision": false,
--        "validation_field": "Schluss",
--        "validation_metric": "mean_squared_error"
--    }
--}
-\ No newline at end of file
-Index: mlruns/0/8e30b65e41fb456c98981d1090f073cd/meta.yaml
-===================================================================
-diff --git a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/meta.yaml b/mlruns/0/8e30b65e41fb456c98981d1090f073cd/meta.yaml
-deleted file mode 100644
---- a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/meta.yaml	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,15 +0,0 @@
--artifact_uri: file://C:\Users\simon\PycharmProjects\MLOPS\mlruns\0\8e30b65e41fb456c98981d1090f073cd\artifacts
--end_time: 1709331278681
--entry_point_name: ''
--experiment_id: '0'
--lifecycle_stage: active
--run_id: 8e30b65e41fb456c98981d1090f073cd
--run_name: Tesla_deep_lstm_2024-03-01_23-14-33
--run_uuid: 8e30b65e41fb456c98981d1090f073cd
--source_name: ''
--source_type: 4
--source_version: ''
--start_time: 1709331273498
--status: 3
--tags: []
--user_id: Alexa
-Index: mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/training_set_metadata.json
-===================================================================
-diff --git a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/training_set_metadata.json b/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/training_set_metadata.json
-deleted file mode 100644
---- a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/training_set_metadata.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,100 +0,0 @@
--{
--    "Datum": {
--        "preprocessing": {
--            "computed_fill_value": "",
--            "datetime_format": null,
--            "fill_value": "",
--            "missing_value_strategy": "fill_with_const"
--        }
--    },
--    "EMA": {
--        "mean": 71.66910552978516,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 101.56829071044922
--    },
--    "Eroeffnung": {
--        "mean": 306.9889831542969,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 290.2434997558594
--    },
--    "RSI": {
--        "mean": 52.71760559082031,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 13.437446594238281
--    },
--    "Schluss": {
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "drop_row",
--            "normalization": null,
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        }
--    },
--    "Tageshoch": {
--        "mean": 313.6554260253906,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 298.085205078125
--    },
--    "Tagestief": {
--        "mean": 299.9818115234375,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 282.0718078613281
--    },
--    "Umsatz": {
--        "mean": 22810284.0,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 39810652.0
--    },
--    "checksum": "U66fFwKl2qiRnwCUpq47RQ=="
--}
-\ No newline at end of file
-Index: src/trackingfiles_download.py
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
-deleted file mode 100644
---- a/src/trackingfiles_download.py	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,96 +0,0 @@
--import os
--import boto3
--import zipfile
--import yaml
--
--
--def download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):
--    # Liste aller Objekte im MLflow-Bucket abrufen
--    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']
--
--    # Ludwig-Konfigurationsdatei und Modellname extrahieren
--    ludwig_config_file_name = "ludwig_MLCore.yaml"
--    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)
--
--    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert
--    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')
--    os.makedirs(mlruns_dir, exist_ok=True)
--
--    # Durch jedes Objekt im MLflow-Bucket iterieren
--    for obj in mlflow_objects:
--        # Objekt-Key abrufen
--        obj_key = obj['Key']
--
--        # Datei herunterladen
--        local_file_path = os.path.join(mlruns_dir, obj_key)
--        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)
--
--        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist
--        if obj_key.endswith('.zip'):
--            # Zip-Datei entpacken
--            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:
--                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))
--            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde
--            os.remove(local_file_path)
--
--            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen
--            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])
--            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')
--
--            # Den artifact_uri in der meta.yaml-Datei aktualisieren
--            with open(meta_yaml_path, 'r') as meta_file:
--                meta_data = yaml.safe_load(meta_file)
--
--            # Aktuellen Pfad des Skripts ermitteln
--            script_path = os.path.dirname(os.path.realpath(__file__))
--            # Aktuellen Run-ID ermitteln
--            run_id = os.path.basename(run_dir)
--            # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, 'mlruns', '0', run_id, 'artifacts'))
--
--            # Neuen absoluten Pfad zur artefakt_uri verwenden
--            meta_data['artifact_uri'] = f'file://{artifact_uri}'
--
--            with open(meta_yaml_path, 'w') as meta_file:
--                yaml.safe_dump(meta_data, meta_file)
--
--    # Herunterladen der meta.yaml-Datei aus dem "modelconfigs"-Bucket
--    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')
--    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)
--
--
--def extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):
--    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen
--    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)
--    ludwig_config_content = obj['Body'].read().decode('utf-8')
--
--    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren
--    yaml_content = yaml.safe_load(ludwig_config_content)
--    if 'model' in yaml_content and 'type' in yaml_content['model']:
--        model_name = yaml_content['model']['type']
--        return model_name
--    else:
--        raise ValueError("Model name not found in Ludwig config file.")
--
--
--if __name__ == "__main__":
--    # Bucket-Namen und lokales Verzeichnis festlegen
--    mlflow_bucket_name = "mlflowtracking"
--    modelconfigs_bucket_name = "modelconfigs"
--    local_directory = '/app'
--
--
--    # Zugangsdaten
--    access_key_id = "test"
--    secret_access_key = "testpassword"
--    endpoint_url = "http://85.215.53.91:9000"
--
--    # Verbindung zum S3-Client herstellen
--    s3_client = boto3.client('s3',
--                             aws_access_key_id=access_key_id,
--                             aws_secret_access_key=secret_access_key,
--                             endpoint_url=endpoint_url)
--
--    # MLflow-Runs herunterladen und Zip-Dateien entpacken
--    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
--    print(local_directory)
-Index: mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/model_hyperparameters.json
-===================================================================
-diff --git a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/model_hyperparameters.json b/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/model_hyperparameters.json
-deleted file mode 100644
---- a/mlruns/0/8e30b65e41fb456c98981d1090f073cd/artifacts/deep_lstm/model_hyperparameters.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,943 +0,0 @@
--{
--    "backend": null,
--    "combiner": {
--        "activation": "relu",
--        "bias_initializer": "zeros",
--        "dropout": 0.0,
--        "fc_layers": null,
--        "flatten_inputs": false,
--        "norm": null,
--        "norm_params": null,
--        "num_fc_layers": 0,
--        "output_size": 256,
--        "residual": false,
--        "type": "concat",
--        "use_bias": true,
--        "weights_initializer": "xavier_uniform"
--    },
--    "defaults": {
--        "audio": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "audio_file_length_limit_in_s": 7.5,
--                "computed_fill_value": null,
--                "fill_value": null,
--                "in_memory": true,
--                "missing_value_strategy": "bfill",
--                "norm": null,
--                "num_fft_points": null,
--                "num_filter_bands": 80,
--                "padding_value": 0.0,
--                "type": "fbank",
--                "window_length_in_s": 0.04,
--                "window_shift_in_s": 0.02,
--                "window_type": "hamming"
--            }
--        },
--        "bag": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "force_embedding_size": false,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "binary": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "confidence_penalty": 0,
--                "positive_class_weight": null,
--                "robust_lambda": 0,
--                "type": "binary_weighted_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fallback_true_label": null,
--                "fill_value": null,
--                "missing_value_strategy": "fill_with_false"
--            }
--        },
--        "category": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_initializer": null,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "pretrained_embeddings": null,
--                "skip": false,
--                "type": "dense",
--                "vocab": null
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "softmax_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000
--            }
--        },
--        "date": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "h3": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "reduce_output": "sum",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": 576495936675512319,
--                "fill_value": 576495936675512319,
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "image": {
--            "augmentation": [],
--            "encoder": {
--                "conv_activation": "relu",
--                "conv_dropout": 0.0,
--                "conv_layers": null,
--                "conv_norm": null,
--                "conv_norm_params": null,
--                "conv_use_bias": true,
--                "dilation": 1,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "groups": 1,
--                "height": null,
--                "kernel_size": 3,
--                "num_channels": null,
--                "num_conv_layers": null,
--                "num_fc_layers": 1,
--                "out_channels": 32,
--                "output_size": 128,
--                "padding": "valid",
--                "padding_mode": "zeros",
--                "pool_dilation": 1,
--                "pool_function": "max",
--                "pool_kernel_size": 2,
--                "pool_padding": 0,
--                "pool_stride": null,
--                "skip": false,
--                "stride": 1,
--                "type": "stacked_cnn",
--                "width": null
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fill_value": null,
--                "height": null,
--                "in_memory": true,
--                "infer_image_dimensions": true,
--                "infer_image_max_height": 256,
--                "infer_image_max_width": 256,
--                "infer_image_num_channels": true,
--                "infer_image_sample_size": 100,
--                "missing_value_strategy": "bfill",
--                "num_channels": null,
--                "num_processes": 1,
--                "requires_equal_dimensions": false,
--                "resize_method": "interpolate",
--                "standardize_image": null,
--                "width": null
--            }
--        },
--        "number": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            }
--        },
--        "sequence": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "max_sequence_length": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "vocab": null,
--                "weights_initializer": "uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "sequence_length": null,
--                "tokenizer": "space",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "set": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_weights": null,
--                "type": "sigmoid_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "text": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "compute_idf": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": true,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "pretrained_model_name_or_path": null,
--                "prompt": {
--                    "retrieval": {
--                        "index_name": null,
--                        "k": 0,
--                        "model_name": null,
--                        "type": null
--                    },
--                    "task": null,
--                    "template": null
--                },
--                "sequence_length": null,
--                "tokenizer": "space_punct",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "timeseries": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "delta": 1.0,
--                "type": "huber",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "padding": "right",
--                "padding_value": 0.0,
--                "timeseries_length_limit": 256,
--                "tokenizer": "space",
--                "window_size": 0
--            }
--        },
--        "vector": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "fc_layers": null,
--                "input_size": null,
--                "norm": null,
--                "norm_params": null,
--                "num_layers": 1,
--                "output_size": 256,
--                "skip": false,
--                "type": "dense",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "vector_size": null
--            }
--        }
--    },
--    "hyperopt": null,
--    "input_features": [
--        {
--            "active": true,
--            "column": "Datum",
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "name": "Datum",
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            },
--            "proc_column": "Datum_KreTWx",
--            "tied": null,
--            "type": "date"
--        },
--        {
--            "active": true,
--            "column": "Eroeffnung",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Eroeffnung",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Eroeffnung_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tageshoch",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tageshoch",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tageshoch_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tagestief",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tagestief",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tagestief_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Umsatz",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Umsatz",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Umsatz_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "RSI",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "RSI",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "RSI_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "EMA",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "EMA",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "EMA_sMoadH",
--            "tied": null,
--            "type": "number"
--        }
--    ],
--    "ludwig_version": "0.8.6",
--    "model_type": "ecd",
--    "output_features": [
--        {
--            "active": true,
--            "clip": null,
--            "column": "Schluss",
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 75,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "default_validation_metric": "mean_squared_error",
--            "dependencies": [],
--            "input_size": 75,
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "name": "Schluss",
--            "num_classes": null,
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "drop_row",
--                "normalization": null,
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Schluss_VO1XAD",
--            "reduce_dependencies": "sum",
--            "reduce_input": "sum",
--            "type": "number"
--        }
--    ],
--    "preprocessing": {
--        "global_max_sequence_length": null,
--        "oversample_minority": null,
--        "sample_ratio": 1.0,
--        "sample_size": null,
--        "split": {
--            "probabilities": [
--                0.7,
--                0.1,
--                0.2
--            ],
--            "type": "random"
--        },
--        "undersample_majority": null
--    },
--    "trainer": {
--        "batch_size": 32,
--        "bucketing_field": null,
--        "checkpoints_per_epoch": 0,
--        "compile": false,
--        "early_stop": 5,
--        "effective_batch_size": "auto",
--        "enable_gradient_checkpointing": false,
--        "enable_profiling": false,
--        "epochs": 3,
--        "eval_batch_size": 4,
--        "evaluate_training_set": false,
--        "gradient_accumulation_steps": 1,
--        "gradient_clipping": {
--            "clipglobalnorm": 0.5,
--            "clipnorm": null,
--            "clipvalue": null
--        },
--        "increase_batch_size_eval_metric": "loss",
--        "increase_batch_size_eval_split": "training",
--        "increase_batch_size_on_plateau": 0,
--        "increase_batch_size_on_plateau_patience": 5,
--        "increase_batch_size_on_plateau_rate": 2.0,
--        "learning_rate": 0.001,
--        "learning_rate_scaling": "linear",
--        "learning_rate_scheduler": {
--            "decay": null,
--            "decay_rate": 0.96,
--            "decay_steps": 10000,
--            "eta_min": 0,
--            "reduce_eval_metric": "loss",
--            "reduce_eval_split": "training",
--            "reduce_on_plateau": 0,
--            "reduce_on_plateau_patience": 10,
--            "reduce_on_plateau_rate": 0.1,
--            "staircase": false,
--            "t_0": null,
--            "t_mult": 1,
--            "warmup_evaluations": 0,
--            "warmup_fraction": 0.0
--        },
--        "max_batch_size": 1099511627776,
--        "optimizer": {
--            "amsgrad": false,
--            "betas": [
--                0.9,
--                0.999
--            ],
--            "eps": 1e-08,
--            "type": "adam",
--            "weight_decay": 0.0
--        },
--        "profiler": {
--            "active": 3,
--            "repeat": 5,
--            "skip_first": 0,
--            "wait": 1,
--            "warmup": 1
--        },
--        "regularization_lambda": 0.0,
--        "regularization_type": "l2",
--        "should_shuffle": true,
--        "skip_all_evaluation": false,
--        "steps_per_checkpoint": 0,
--        "train_steps": null,
--        "use_mixed_precision": false,
--        "validation_field": "Schluss",
--        "validation_metric": "mean_squared_error"
--    }
--}
-\ No newline at end of file
-Index: mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/training_set_metadata.json
-===================================================================
-diff --git a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/training_set_metadata.json b/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/training_set_metadata.json
-deleted file mode 100644
---- a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/artifacts/deep_lstm/training_set_metadata.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,100 +0,0 @@
--{
--    "Datum": {
--        "preprocessing": {
--            "computed_fill_value": "",
--            "datetime_format": null,
--            "fill_value": "",
--            "missing_value_strategy": "fill_with_const"
--        }
--    },
--    "EMA": {
--        "mean": 71.66910552978516,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 101.56829071044922
--    },
--    "Eroeffnung": {
--        "mean": 306.9889831542969,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 290.2434997558594
--    },
--    "RSI": {
--        "mean": 52.71760559082031,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 13.437446594238281
--    },
--    "Schluss": {
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "drop_row",
--            "normalization": null,
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        }
--    },
--    "Tageshoch": {
--        "mean": 313.6554260253906,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 298.085205078125
--    },
--    "Tagestief": {
--        "mean": 299.9818115234375,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 282.0718078613281
--    },
--    "Umsatz": {
--        "mean": 22810284.0,
--        "preprocessing": {
--            "computed_fill_value": 0.0,
--            "computed_outlier_fill_value": 0.0,
--            "fill_value": 0.0,
--            "missing_value_strategy": "fill_with_const",
--            "normalization": "zscore",
--            "outlier_strategy": null,
--            "outlier_threshold": 3.0
--        },
--        "std": 39810652.0
--    },
--    "checksum": "ejjsqzdQyyDTbW8uHJ_nxQ=="
--}
-\ No newline at end of file
-Index: mlruns/0/098bd50384a246b18ba1fd6d10930de2/meta.yaml
-===================================================================
-diff --git a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/meta.yaml b/mlruns/0/098bd50384a246b18ba1fd6d10930de2/meta.yaml
-deleted file mode 100644
---- a/mlruns/0/098bd50384a246b18ba1fd6d10930de2/meta.yaml	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,15 +0,0 @@
--artifact_uri: file://C:\Users\simon\PycharmProjects\MLOPS\mlruns\0\098bd50384a246b18ba1fd6d10930de2\artifacts
--end_time: 1709329643846
--entry_point_name: ''
--experiment_id: '0'
--lifecycle_stage: active
--run_id: 098bd50384a246b18ba1fd6d10930de2
--run_name: Tesla_deep_lstm_2024-03-01_22-47-18
--run_uuid: 098bd50384a246b18ba1fd6d10930de2
--source_name: ''
--source_type: 4
--source_version: ''
--start_time: 1709329639140
--status: 3
--tags: []
--user_id: Alexa
-Index: mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/model_hyperparameters.json
-===================================================================
-diff --git a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/model_hyperparameters.json b/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/model_hyperparameters.json
-deleted file mode 100644
---- a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/artifacts/deep_lstm/model_hyperparameters.json	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,943 +0,0 @@
--{
--    "backend": null,
--    "combiner": {
--        "activation": "relu",
--        "bias_initializer": "zeros",
--        "dropout": 0.0,
--        "fc_layers": null,
--        "flatten_inputs": false,
--        "norm": null,
--        "norm_params": null,
--        "num_fc_layers": 0,
--        "output_size": 256,
--        "residual": false,
--        "type": "concat",
--        "use_bias": true,
--        "weights_initializer": "xavier_uniform"
--    },
--    "defaults": {
--        "audio": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "audio_file_length_limit_in_s": 7.5,
--                "computed_fill_value": null,
--                "fill_value": null,
--                "in_memory": true,
--                "missing_value_strategy": "bfill",
--                "norm": null,
--                "num_fft_points": null,
--                "num_filter_bands": 80,
--                "padding_value": 0.0,
--                "type": "fbank",
--                "window_length_in_s": 0.04,
--                "window_shift_in_s": 0.02,
--                "window_type": "hamming"
--            }
--        },
--        "bag": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "force_embedding_size": false,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "binary": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "confidence_penalty": 0,
--                "positive_class_weight": null,
--                "robust_lambda": 0,
--                "type": "binary_weighted_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fallback_true_label": null,
--                "fill_value": null,
--                "missing_value_strategy": "fill_with_false"
--            }
--        },
--        "category": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_initializer": null,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "pretrained_embeddings": null,
--                "skip": false,
--                "type": "dense",
--                "vocab": null
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "softmax_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000
--            }
--        },
--        "date": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "h3": {
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "reduce_output": "sum",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "preprocessing": {
--                "computed_fill_value": 576495936675512319,
--                "fill_value": 576495936675512319,
--                "missing_value_strategy": "fill_with_const"
--            }
--        },
--        "image": {
--            "augmentation": [],
--            "encoder": {
--                "conv_activation": "relu",
--                "conv_dropout": 0.0,
--                "conv_layers": null,
--                "conv_norm": null,
--                "conv_norm_params": null,
--                "conv_use_bias": true,
--                "dilation": 1,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "groups": 1,
--                "height": null,
--                "kernel_size": 3,
--                "num_channels": null,
--                "num_conv_layers": null,
--                "num_fc_layers": 1,
--                "out_channels": 32,
--                "output_size": 128,
--                "padding": "valid",
--                "padding_mode": "zeros",
--                "pool_dilation": 1,
--                "pool_function": "max",
--                "pool_kernel_size": 2,
--                "pool_padding": 0,
--                "pool_stride": null,
--                "skip": false,
--                "stride": 1,
--                "type": "stacked_cnn",
--                "width": null
--            },
--            "preprocessing": {
--                "computed_fill_value": null,
--                "fill_value": null,
--                "height": null,
--                "in_memory": true,
--                "infer_image_dimensions": true,
--                "infer_image_max_height": 256,
--                "infer_image_max_width": 256,
--                "infer_image_num_channels": true,
--                "infer_image_sample_size": 100,
--                "missing_value_strategy": "bfill",
--                "num_channels": null,
--                "num_processes": 1,
--                "requires_equal_dimensions": false,
--                "resize_method": "interpolate",
--                "standardize_image": null,
--                "width": null
--            }
--        },
--        "number": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "skip": false,
--                "type": "passthrough"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            }
--        },
--        "sequence": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "max_sequence_length": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "vocab": null,
--                "weights_initializer": "uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "sequence_length": null,
--                "tokenizer": "space",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "set": {
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "num_classes": null,
--                "num_fc_layers": 0,
--                "type": "classifier",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 50,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "pretrained_embeddings": null,
--                "representation": "dense",
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_weights": null,
--                "type": "sigmoid_cross_entropy",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": false,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 10000,
--                "tokenizer": "space"
--            }
--        },
--        "text": {
--            "decoder": {
--                "cell_type": "gru",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 256,
--                "max_sequence_length": null,
--                "num_fc_layers": 0,
--                "num_layers": 1,
--                "reduce_input": "sum",
--                "type": "generator",
--                "vocab_size": null
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "class_similarities": null,
--                "class_similarities_temperature": 0,
--                "class_weights": null,
--                "confidence_penalty": 0,
--                "robust_lambda": 0,
--                "type": "sequence_softmax_cross_entropy",
--                "unique": false,
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "cache_encoder_embeddings": false,
--                "compute_idf": false,
--                "computed_fill_value": "<UNK>",
--                "fill_value": "<UNK>",
--                "lowercase": true,
--                "max_sequence_length": 256,
--                "missing_value_strategy": "fill_with_const",
--                "most_common": 20000,
--                "ngram_size": 2,
--                "padding": "right",
--                "padding_symbol": "<PAD>",
--                "pretrained_model_name_or_path": null,
--                "prompt": {
--                    "retrieval": {
--                        "index_name": null,
--                        "k": 0,
--                        "model_name": null,
--                        "type": null
--                    },
--                    "task": null,
--                    "template": null
--                },
--                "sequence_length": null,
--                "tokenizer": "space_punct",
--                "unknown_symbol": "<UNK>",
--                "vocab_file": null
--            }
--        },
--        "timeseries": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "conv_layers": null,
--                "dropout": 0.0,
--                "embedding_size": 256,
--                "embeddings_on_cpu": false,
--                "embeddings_trainable": true,
--                "fc_layers": null,
--                "filter_size": 3,
--                "max_sequence_length": null,
--                "norm": null,
--                "norm_params": null,
--                "num_conv_layers": null,
--                "num_fc_layers": null,
--                "num_filters": 256,
--                "output_size": 256,
--                "pool_function": "max",
--                "pool_size": null,
--                "pretrained_embeddings": null,
--                "reduce_output": "sum",
--                "representation": "dense",
--                "should_embed": true,
--                "skip": false,
--                "type": "parallel_cnn",
--                "use_bias": true,
--                "vocab": null,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "delta": 1.0,
--                "type": "huber",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "padding": "right",
--                "padding_value": 0.0,
--                "timeseries_length_limit": 256,
--                "tokenizer": "space",
--                "window_size": 0
--            }
--        },
--        "vector": {
--            "decoder": {
--                "activation": null,
--                "bias_initializer": "zeros",
--                "clip": null,
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": null,
--                "multiplier": 1.0,
--                "num_fc_layers": 0,
--                "output_size": null,
--                "type": "projector",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "fc_layers": null,
--                "input_size": null,
--                "norm": null,
--                "norm_params": null,
--                "num_layers": 1,
--                "output_size": 256,
--                "skip": false,
--                "type": "dense",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "preprocessing": {
--                "computed_fill_value": "",
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const",
--                "vector_size": null
--            }
--        }
--    },
--    "hyperopt": null,
--    "input_features": [
--        {
--            "active": true,
--            "column": "Datum",
--            "encoder": {
--                "activation": "relu",
--                "bias_initializer": "zeros",
--                "dropout": 0.0,
--                "embedding_size": 10,
--                "embeddings_on_cpu": false,
--                "fc_layers": null,
--                "norm": null,
--                "norm_params": null,
--                "num_fc_layers": 0,
--                "output_size": 10,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "embed",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "name": "Datum",
--            "preprocessing": {
--                "computed_fill_value": "",
--                "datetime_format": null,
--                "fill_value": "",
--                "missing_value_strategy": "fill_with_const"
--            },
--            "proc_column": "Datum_KreTWx",
--            "tied": null,
--            "type": "date"
--        },
--        {
--            "active": true,
--            "column": "Eroeffnung",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Eroeffnung",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Eroeffnung_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tageshoch",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tageshoch",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tageshoch_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Tagestief",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Tagestief",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Tagestief_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "Umsatz",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "Umsatz",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Umsatz_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "RSI",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "RSI",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "RSI_sMoadH",
--            "tied": null,
--            "type": "number"
--        },
--        {
--            "active": true,
--            "column": "EMA",
--            "encoder": {
--                "input_size": 1,
--                "saved_weights_in_checkpoint": true,
--                "skip": false,
--                "type": "passthrough"
--            },
--            "name": "EMA",
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "fill_with_const",
--                "normalization": "zscore",
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "EMA_sMoadH",
--            "tied": null,
--            "type": "number"
--        }
--    ],
--    "ludwig_version": "0.8.6",
--    "model_type": "ecd",
--    "output_features": [
--        {
--            "active": true,
--            "clip": null,
--            "column": "Schluss",
--            "decoder": {
--                "bias_initializer": "zeros",
--                "fc_activation": "relu",
--                "fc_bias_initializer": "zeros",
--                "fc_dropout": 0.0,
--                "fc_layers": null,
--                "fc_norm": null,
--                "fc_norm_params": null,
--                "fc_output_size": 256,
--                "fc_use_bias": true,
--                "fc_weights_initializer": "xavier_uniform",
--                "input_size": 75,
--                "num_fc_layers": 0,
--                "type": "regressor",
--                "use_bias": true,
--                "weights_initializer": "xavier_uniform"
--            },
--            "default_validation_metric": "mean_squared_error",
--            "dependencies": [],
--            "input_size": 75,
--            "loss": {
--                "type": "mean_squared_error",
--                "weight": 1.0
--            },
--            "name": "Schluss",
--            "num_classes": null,
--            "preprocessing": {
--                "computed_fill_value": 0.0,
--                "computed_outlier_fill_value": 0.0,
--                "fill_value": 0.0,
--                "missing_value_strategy": "drop_row",
--                "normalization": null,
--                "outlier_strategy": null,
--                "outlier_threshold": 3.0
--            },
--            "proc_column": "Schluss_VO1XAD",
--            "reduce_dependencies": "sum",
--            "reduce_input": "sum",
--            "type": "number"
--        }
--    ],
--    "preprocessing": {
--        "global_max_sequence_length": null,
--        "oversample_minority": null,
--        "sample_ratio": 1.0,
--        "sample_size": null,
--        "split": {
--            "probabilities": [
--                0.7,
--                0.1,
--                0.2
--            ],
--            "type": "random"
--        },
--        "undersample_majority": null
--    },
--    "trainer": {
--        "batch_size": 32,
--        "bucketing_field": null,
--        "checkpoints_per_epoch": 0,
--        "compile": false,
--        "early_stop": 5,
--        "effective_batch_size": "auto",
--        "enable_gradient_checkpointing": false,
--        "enable_profiling": false,
--        "epochs": 3,
--        "eval_batch_size": 16,
--        "evaluate_training_set": false,
--        "gradient_accumulation_steps": 1,
--        "gradient_clipping": {
--            "clipglobalnorm": 0.5,
--            "clipnorm": null,
--            "clipvalue": null
--        },
--        "increase_batch_size_eval_metric": "loss",
--        "increase_batch_size_eval_split": "training",
--        "increase_batch_size_on_plateau": 0,
--        "increase_batch_size_on_plateau_patience": 5,
--        "increase_batch_size_on_plateau_rate": 2.0,
--        "learning_rate": 0.001,
--        "learning_rate_scaling": "linear",
--        "learning_rate_scheduler": {
--            "decay": null,
--            "decay_rate": 0.96,
--            "decay_steps": 10000,
--            "eta_min": 0,
--            "reduce_eval_metric": "loss",
--            "reduce_eval_split": "training",
--            "reduce_on_plateau": 0,
--            "reduce_on_plateau_patience": 10,
--            "reduce_on_plateau_rate": 0.1,
--            "staircase": false,
--            "t_0": null,
--            "t_mult": 1,
--            "warmup_evaluations": 0,
--            "warmup_fraction": 0.0
--        },
--        "max_batch_size": 1099511627776,
--        "optimizer": {
--            "amsgrad": false,
--            "betas": [
--                0.9,
--                0.999
--            ],
--            "eps": 1e-08,
--            "type": "adam",
--            "weight_decay": 0.0
--        },
--        "profiler": {
--            "active": 3,
--            "repeat": 5,
--            "skip_first": 0,
--            "wait": 1,
--            "warmup": 1
--        },
--        "regularization_lambda": 0.0,
--        "regularization_type": "l2",
--        "should_shuffle": true,
--        "skip_all_evaluation": false,
--        "steps_per_checkpoint": 0,
--        "train_steps": null,
--        "use_mixed_precision": false,
--        "validation_field": "Schluss",
--        "validation_metric": "mean_squared_error"
--    }
--}
-\ No newline at end of file
-Index: mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/meta.yaml
-===================================================================
-diff --git a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/meta.yaml b/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/meta.yaml
-deleted file mode 100644
---- a/mlruns/0/a5f09f6f32a84b64b0140a5868c776c9/meta.yaml	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,15 +0,0 @@
--artifact_uri: file://C:\Users\simon\PycharmProjects\MLOPS\mlruns\0\a5f09f6f32a84b64b0140a5868c776c9\artifacts
--end_time: 1709330516283
--entry_point_name: ''
--experiment_id: '0'
--lifecycle_stage: active
--run_id: a5f09f6f32a84b64b0140a5868c776c9
--run_name: Tesla_deep_lstm_2024-03-01_23-01-51
--run_uuid: a5f09f6f32a84b64b0140a5868c776c9
--source_name: ''
--source_type: 4
--source_version: ''
--start_time: 1709330511502
--status: 3
--tags: []
--user_id: Alexa
-Index: mlruns/0/390a3f35c9924c70955b2312f365efd3/meta.yaml
-===================================================================
-diff --git a/mlruns/0/390a3f35c9924c70955b2312f365efd3/meta.yaml b/mlruns/0/390a3f35c9924c70955b2312f365efd3/meta.yaml
-deleted file mode 100644
---- a/mlruns/0/390a3f35c9924c70955b2312f365efd3/meta.yaml	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-+++ /dev/null	(revision 323da621e7c2c7c6a210daa96f5507e26386b48d)
-@@ -1,15 +0,0 @@
--artifact_uri: file://C:\Users\simon\PycharmProjects\MLOPS\mlruns\0\390a3f35c9924c70955b2312f365efd3\artifacts
--end_time: 1709331767542
--entry_point_name: ''
--experiment_id: '0'
--lifecycle_stage: active
--run_id: 390a3f35c9924c70955b2312f365efd3
--run_name: Tesla_deep_lstm_2024-03-01_23-22-42
--run_uuid: 390a3f35c9924c70955b2312f365efd3
--source_name: ''
--source_type: 4
--source_version: ''
--start_time: 1709331762965
--status: 3
--tags: []
--user_id: Alexa
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,101 +0,0 @@
-Index: src/trackingfiles_download.py
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
-deleted file mode 100644
---- a/src/trackingfiles_download.py	(revision fa5c2a79e7e897e5011ac536bfa2269f017f3013)
-+++ /dev/null	(revision fa5c2a79e7e897e5011ac536bfa2269f017f3013)
-@@ -1,94 +0,0 @@
--import os
--import boto3
--import zipfile
--import yaml
--
--
--def download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):
--    # Liste aller Objekte im MLflow-Bucket abrufen
--    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']
--
--    # Ludwig-Konfigurationsdatei und Modellname extrahieren
--    ludwig_config_file_name = "ludwig_MLCore.yaml"
--    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)
--
--    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert
--    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')
--    os.makedirs(mlruns_dir, exist_ok=True)
--
--    # Durch jedes Objekt im MLflow-Bucket iterieren
--    for obj in mlflow_objects:
--        # Objekt-Key abrufen
--        obj_key = obj['Key']
--
--        # Datei herunterladen
--        local_file_path = os.path.join(mlruns_dir, obj_key)
--        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)
--
--        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist
--        if obj_key.endswith('.zip'):
--            # Zip-Datei entpacken
--            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:
--                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))
--            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde
--            os.remove(local_file_path)
--
--            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen
--            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])
--            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')
--
--            # Den artifact_uri in der meta.yaml-Datei aktualisieren
--            with open(meta_yaml_path, 'r') as meta_file:
--                meta_data = yaml.safe_load(meta_file)
--
--            # Aktuellen Pfad des Skripts ermitteln
--            script_path = os.path.dirname(os.path.realpath(__file__))
--            # Aktuellen Run-ID ermitteln
--            run_id = os.path.basename(run_dir)
--            # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, '..', 'mlruns', '0', run_id, 'artifacts'))
--
--            # Neuen absoluten Pfad zur artefakt_uri verwenden
--            meta_data['artifact_uri'] = f'file://{artifact_uri}'
--
--            with open(meta_yaml_path, 'w') as meta_file:
--                yaml.safe_dump(meta_data, meta_file)
--
--    # Herunterladen der meta.yaml-Datei aus dem "modelconfigs"-Bucket
--    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')
--    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)
--
--
--def extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):
--    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen
--    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)
--    ludwig_config_content = obj['Body'].read().decode('utf-8')
--
--    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren
--    yaml_content = yaml.safe_load(ludwig_config_content)
--    if 'model' in yaml_content and 'type' in yaml_content['model']:
--        model_name = yaml_content['model']['type']
--        return model_name
--    else:
--        raise ValueError("Model name not found in Ludwig config file.")
--
--
--if __name__ == "__main__":
--    # Bucket-Namen und lokales Verzeichnis festlegen
--    mlflow_bucket_name = "mlflowtracking"
--    modelconfigs_bucket_name = "modelconfigs"
--    local_directory = os.path.join(os.getcwd(), '..')  # Eine Ebene höher im Ordner MLOPS
--
--    # Zugangsdaten
--    access_key_id = "test"
--    secret_access_key = "testpassword"
--    endpoint_url = "http://85.215.53.91:9000"
--
--    # Verbindung zum S3-Client herstellen
--    s3_client = boto3.client('s3',
--                             aws_access_key_id=access_key_id,
--                             aws_secret_access_key=secret_access_key,
--                             endpoint_url=endpoint_url)
--
--    # MLflow-Runs herunterladen und Zip-Dateien entpacken
--    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,64 +0,0 @@
-Index: requirements.txt
-===================================================================
-diff --git a/requirements.txt b/requirements.txt
-deleted file mode 100644
---- a/requirements.txt	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-+++ /dev/null	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-@@ -1,8 +0,0 @@
--mlflow~=2.8.1
--ludwig~=0.8.6
--pandas~=2.0.3
--selenium==4.9.0
--
--minio
--requests~=2.31.0
--boto3
-\ No newline at end of file
-Index: README.md
-===================================================================
-diff --git a/README.md b/README.md
-deleted file mode 100644
---- a/README.md	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-+++ /dev/null	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-@@ -1,1 +0,0 @@
--# MLOPS
-\ No newline at end of file
-Index: src/start_tracking-server.txt
-===================================================================
-diff --git a/src/start_tracking-server.txt b/src/start_tracking-server.txt
-deleted file mode 100644
---- a/src/start_tracking-server.txt	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-+++ /dev/null	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-@@ -1,1 +0,0 @@
--mlflow server --port 8080 --backend-store-uri ./mlruns
-\ No newline at end of file
-Index: .idea/inspectionProfiles/Project_Default.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"PyPackageRequirementsInspection\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"ignoredPackages\">\r\n        <value>\r\n          <list size=\"3\">\r\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"ludwig\" />\r\n            <item index=\"1\" class=\"java.lang.String\" itemvalue=\"dbt\" />\r\n            <item index=\"2\" class=\"java.lang.String\" itemvalue=\"mlflow\" />\r\n          </list>\r\n        </value>\r\n      </option>\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PyPep8Inspection\" enabled=\"true\" level=\"WEAK WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"ignoredErrors\">\r\n        <list>\r\n          <option value=\"W605\" />\r\n        </list>\r\n      </option>\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
---- a/.idea/inspectionProfiles/Project_Default.xml	(revision 10099cc5d5c141aa016e8622dddb2878dbd77dba)
-+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1715155007803)
-@@ -4,10 +4,15 @@
-     <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
-       <option name="ignoredPackages">
-         <value>
--          <list size="3">
-+          <list size="8">
-             <item index="0" class="java.lang.String" itemvalue="ludwig" />
-             <item index="1" class="java.lang.String" itemvalue="dbt" />
-             <item index="2" class="java.lang.String" itemvalue="mlflow" />
-+            <item index="3" class="java.lang.String" itemvalue="zipfile" />
-+            <item index="4" class="java.lang.String" itemvalue="os" />
-+            <item index="5" class="java.lang.String" itemvalue="yaml" />
-+            <item index="6" class="java.lang.String" itemvalue="crontab" />
-+            <item index="7" class="java.lang.String" itemvalue="cron" />
-           </list>
-         </value>
-       </option>
-diff --git a/ludwig_MLCore.yaml b/ludwig_config_yamls/ludwig_MLCore.yaml
-rename from ludwig_MLCore.yaml
-rename to ludwig_config_yamls/ludwig_MLCore.yaml
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1" date="1715157771919" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42_[Changes]1/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 10:42 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]" date="1715157808179" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 08.05.2024 10:43 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,53 +0,0 @@
-Index: requirements.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/requirements.txt b/requirements.txt
-deleted file mode 100644
---- a/requirements.txt	
-+++ /dev/null	
-@@ -1,3 +0,0 @@
--mlflow
--boto3
--crontab
-\ No newline at end of file
-Index: README.md
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/README.md b/README.md
-deleted file mode 100644
---- a/README.md	
-+++ /dev/null	
-@@ -1,1 +0,0 @@
--# MLOPS
-\ No newline at end of file
-Index: .idea/inspectionProfiles/Project_Default.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n    <inspection_tool class=\"PyPackageRequirementsInspection\" enabled=\"true\" level=\"WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"ignoredPackages\">\r\n        <value>\r\n          <list size=\"3\">\r\n            <item index=\"0\" class=\"java.lang.String\" itemvalue=\"ludwig\" />\r\n            <item index=\"1\" class=\"java.lang.String\" itemvalue=\"dbt\" />\r\n            <item index=\"2\" class=\"java.lang.String\" itemvalue=\"mlflow\" />\r\n          </list>\r\n        </value>\r\n      </option>\r\n    </inspection_tool>\r\n    <inspection_tool class=\"PyPep8Inspection\" enabled=\"true\" level=\"WEAK WARNING\" enabled_by_default=\"true\">\r\n      <option name=\"ignoredErrors\">\r\n        <list>\r\n          <option value=\"W605\" />\r\n        </list>\r\n      </option>\r\n    </inspection_tool>\r\n  </profile>\r\n</component>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
---- a/.idea/inspectionProfiles/Project_Default.xml	
-+++ b/.idea/inspectionProfiles/Project_Default.xml	
-@@ -4,10 +4,15 @@
-     <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
-       <option name="ignoredPackages">
-         <value>
--          <list size="3">
-+          <list size="8">
-             <item index="0" class="java.lang.String" itemvalue="ludwig" />
-             <item index="1" class="java.lang.String" itemvalue="dbt" />
-             <item index="2" class="java.lang.String" itemvalue="mlflow" />
-+            <item index="3" class="java.lang.String" itemvalue="zipfile" />
-+            <item index="4" class="java.lang.String" itemvalue="os" />
-+            <item index="5" class="java.lang.String" itemvalue="yaml" />
-+            <item index="6" class="java.lang.String" itemvalue="crontab" />
-+            <item index="7" class="java.lang.String" itemvalue="cron" />
-           </list>
-         </value>
-       </option>
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2" date="1715155088365" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57_[Changes]2/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 08.05.2024 09:57 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43_[Changes]/shelved.patch	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ /dev/null	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
@@ -1,103 +0,0 @@
-Index: src/trackingfiles_download.py
-===================================================================
-diff --git a/src/trackingfiles_download.py b/src/trackingfiles_download.py
-deleted file mode 100644
---- a/src/trackingfiles_download.py	(revision 09a833b3a32f61f2f80aa072655d44309834d18a)
-+++ /dev/null	(revision 09a833b3a32f61f2f80aa072655d44309834d18a)
-@@ -1,96 +0,0 @@
--import os
--import boto3
--import zipfile
--import yaml
--
--
--def download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client):
--    # Liste aller Objekte im MLflow-Bucket abrufen
--    mlflow_objects = s3_client.list_objects_v2(Bucket=mlflow_bucket_name)['Contents']
--
--    # Ludwig-Konfigurationsdatei und Modellname extrahieren
--    ludwig_config_file_name = "ludwig_MLCore.yaml"
--    model_name = extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client)
--
--    # Lokales Verzeichnis für mlruns erstellen, falls es nicht existiert
--    mlruns_dir = os.path.join(local_directory, 'mlruns', '0')
--    os.makedirs(mlruns_dir, exist_ok=True)
--
--    # Durch jedes Objekt im MLflow-Bucket iterieren
--    for obj in mlflow_objects:
--        # Objekt-Key abrufen
--        obj_key = obj['Key']
--
--        # Datei herunterladen
--        local_file_path = os.path.join(mlruns_dir, obj_key)
--        s3_client.download_file(mlflow_bucket_name, obj_key, local_file_path)
--
--        # Überprüfen, ob die heruntergeladene Datei eine Zip-Datei ist
--        if obj_key.endswith('.zip'):
--            # Zip-Datei entpacken
--            with zipfile.ZipFile(local_file_path, 'r') as zip_ref:
--                zip_ref.extractall(os.path.join(mlruns_dir, os.path.splitext(obj_key)[0]))
--            # Heruntergeladene Zip-Datei löschen, nachdem sie entpackt wurde
--            os.remove(local_file_path)
--
--            # Pfade für den entpackten Run und die meta.yaml-Datei erstellen
--            run_dir = os.path.join(mlruns_dir, os.path.splitext(obj_key)[0])
--            meta_yaml_path = os.path.join(run_dir, 'meta.yaml')
--
--            # Den artifact_uri in der meta.yaml-Datei aktualisieren
--            with open(meta_yaml_path, 'r') as meta_file:
--                meta_data = yaml.safe_load(meta_file)
--
--            # Aktuellen Pfad des Skripts ermitteln
--            script_path = os.path.dirname(os.path.realpath(__file__))
--            # Aktuellen Run-ID ermitteln
--            run_id = os.path.basename(run_dir)
--            # Pfad zur artefakt_uri erstellen
--            artifact_uri = os.path.abspath(os.path.join(script_path, 'mlruns', '0', run_id, 'artifacts'))
--
--            # Neuen absoluten Pfad zur artefakt_uri verwenden
--            meta_data['artifact_uri'] = f'file://{artifact_uri}'
--
--            with open(meta_yaml_path, 'w') as meta_file:
--                yaml.safe_dump(meta_data, meta_file)
--
--    # Herunterladen der meta.yaml-Datei aus dem "modelconfigs"-Bucket
--    modelconfigs_meta_yaml_path = os.path.join(mlruns_dir, 'meta.yaml')
--    s3_client.download_file(modelconfigs_bucket_name, 'meta.yaml', modelconfigs_meta_yaml_path)
--
--
--def extract_model_name_from_s3(modelconfigs_bucket_name, ludwig_config_file_name, s3_client):
--    # Ludwig-Konfigurationsdatei aus dem S3-Bucket herunterladen
--    obj = s3_client.get_object(Bucket=modelconfigs_bucket_name, Key=ludwig_config_file_name)
--    ludwig_config_content = obj['Body'].read().decode('utf-8')
--
--    # Modellnamen aus der Ludwig-Konfigurationsdatei extrahieren
--    yaml_content = yaml.safe_load(ludwig_config_content)
--    if 'model' in yaml_content and 'type' in yaml_content['model']:
--        model_name = yaml_content['model']['type']
--        return model_name
--    else:
--        raise ValueError("Model name not found in Ludwig config file.")
--
--
--if __name__ == "__main__":
--    # Bucket-Namen und lokales Verzeichnis festlegen
--    mlflow_bucket_name = "mlflowtracking"
--    modelconfigs_bucket_name = "modelconfigs"
--    local_directory = '/app'
--
--
--    # Zugangsdaten
--    access_key_id = "test"
--    secret_access_key = "testpassword"
--    endpoint_url = "http://85.215.53.91:9000"
--
--    # Verbindung zum S3-Client herstellen
--    s3_client = boto3.client('s3',
--                             aws_access_key_id=access_key_id,
--                             aws_secret_access_key=secret_access_key,
--                             endpoint_url=endpoint_url)
--
--    # MLflow-Runs herunterladen und Zip-Dateien entpacken
--    download_mlflow_runs(mlflow_bucket_name, modelconfigs_bucket_name, local_directory, s3_client)
--    print(local_directory)
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.8\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ b/.idea/misc.xml	(date 1715179984155)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Python 3.8" />
+  </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7129941a-7e3c-46d3-aeda-e70cd3d18c72\" name=\"Changes\" comment=\"Merged Add to MLCore branch\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"Dockerfile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\r\n    <envs>\r\n      <env key=\"FLASK_APP\" value=\"app\" />\r\n    </envs>\r\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\r\n    <option name=\"myEnvs\">\r\n      <map>\r\n        <entry key=\"FLASK_APP\" value=\"app\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PREVIEW_PUSH_PROTECTED_ONLY\" value=\"true\" />\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"MLCore\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;SJaksc&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"be61370e-e9b9-4ef8-9fed-f9b5b2bfe350\" />\r\n        <option name=\"url\" value=\"git@github.com:PriXss/MLOPS.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"KubernetesApiProvider\">{\r\n  &quot;isMigrated&quot;: true\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ZOrQdhyCy8zxQ9DFxfUuhFveeK\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;DagsterPipelineProdRun&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/simon/PycharmProjects/MLOPS&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\Docker_Train_Model\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\ludwig_configs\" />\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\ludwig_config_yamls\" />\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\" />\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\src\" />\r\n      <recent name=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\Docker_Train_Model\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.train_ludwig_model (1)\">\r\n    <configuration name=\"docker_train_ludwig_model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Docker_Train_Model\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Docker_Train_Model/docker_train_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"predict_ludwig_model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/predict_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"trackingfiles_download\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/trackingfiles_download.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"train_ludwig_model (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/train_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"train_ludwig_model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Docker_Train_Model\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"C:\\Users\\simon\\PycharmProjects\\MLOPS\\src\\train_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"train_ludwig_model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/train_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"train_ludwig_model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"MLOPS\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/src\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/src/train_ludwig_model.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"docker-image\" temporary=\"true\">\r\n      <deployment type=\"docker-image\">\r\n        <settings />\r\n      </deployment>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docker-deploy\" factoryName=\"dockerfile\" temporary=\"true\">\r\n      <deployment type=\"dockerfile\">\r\n        <settings />\r\n      </deployment>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.train_ludwig_model (1)\" />\r\n        <item itemvalue=\"Python.train_ludwig_model\" />\r\n        <item itemvalue=\"Python.trackingfiles_download\" />\r\n        <item itemvalue=\"Python.predict_ludwig_model\" />\r\n        <item itemvalue=\"Python.docker_train_ludwig_model\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7129941a-7e3c-46d3-aeda-e70cd3d18c72\" name=\"Changes\" comment=\"\" />\r\n      <created>1702303952826</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1702303952826</updated>\r\n      <workItem from=\"1702303954256\" duration=\"1335000\" />\r\n      <workItem from=\"1702369691710\" duration=\"43000\" />\r\n      <workItem from=\"1702404344922\" duration=\"617000\" />\r\n      <workItem from=\"1702407663236\" duration=\"745000\" />\r\n      <workItem from=\"1702461879422\" duration=\"2355000\" />\r\n      <workItem from=\"1702471296698\" duration=\"2647000\" />\r\n      <workItem from=\"1702484116452\" duration=\"4763000\" />\r\n      <workItem from=\"1703074692520\" duration=\"16000\" />\r\n      <workItem from=\"1703077280867\" duration=\"130000\" />\r\n      <workItem from=\"1703077498494\" duration=\"3505000\" />\r\n      <workItem from=\"1704742529624\" duration=\"2627000\" />\r\n      <workItem from=\"1704787856112\" duration=\"1050000\" />\r\n      <workItem from=\"1704993306694\" duration=\"127000\" />\r\n      <workItem from=\"1706456827507\" duration=\"9584000\" />\r\n      <workItem from=\"1706547543355\" duration=\"1426000\" />\r\n      <workItem from=\"1706557947250\" duration=\"35000\" />\r\n      <workItem from=\"1706715689035\" duration=\"2485000\" />\r\n      <workItem from=\"1706719476037\" duration=\"1370000\" />\r\n      <workItem from=\"1706722674569\" duration=\"26000\" />\r\n      <workItem from=\"1706803261127\" duration=\"1689000\" />\r\n      <workItem from=\"1706806603556\" duration=\"4449000\" />\r\n      <workItem from=\"1706811491774\" duration=\"36000\" />\r\n      <workItem from=\"1707147627969\" duration=\"5881000\" />\r\n      <workItem from=\"1707410792281\" duration=\"2975000\" />\r\n      <workItem from=\"1707902629348\" duration=\"6482000\" />\r\n      <workItem from=\"1708016382282\" duration=\"743000\" />\r\n      <workItem from=\"1708019397896\" duration=\"40000\" />\r\n      <workItem from=\"1708258935696\" duration=\"6002000\" />\r\n      <workItem from=\"1708362246196\" duration=\"889000\" />\r\n      <workItem from=\"1708436338750\" duration=\"18044000\" />\r\n      <workItem from=\"1708532049342\" duration=\"2830000\" />\r\n      <workItem from=\"1708681648939\" duration=\"13289000\" />\r\n      <workItem from=\"1709029575725\" duration=\"6783000\" />\r\n      <workItem from=\"1709132528392\" duration=\"1477000\" />\r\n      <workItem from=\"1709225673743\" duration=\"1400000\" />\r\n      <workItem from=\"1709381190907\" duration=\"12054000\" />\r\n      <workItem from=\"1709468940368\" duration=\"112000\" />\r\n      <workItem from=\"1709469275259\" duration=\"4185000\" />\r\n      <workItem from=\"1709474542342\" duration=\"108000\" />\r\n      <workItem from=\"1709484911215\" duration=\"9158000\" />\r\n      <workItem from=\"1709564168186\" duration=\"3191000\" />\r\n      <workItem from=\"1709569152760\" duration=\"6887000\" />\r\n      <workItem from=\"1709830591297\" duration=\"624000\" />\r\n      <workItem from=\"1710078539355\" duration=\"1094000\" />\r\n      <workItem from=\"1710091792311\" duration=\"118000\" />\r\n      <workItem from=\"1710748784711\" duration=\"27000\" />\r\n      <workItem from=\"1710767892953\" duration=\"41000\" />\r\n      <workItem from=\"1715154408592\" duration=\"153000\" />\r\n      <workItem from=\"1715154591658\" duration=\"4429000\" />\r\n      <workItem from=\"1715159480548\" duration=\"1159000\" />\r\n      <workItem from=\"1715160663248\" duration=\"1972000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Data Extraction Code V1&#10;Chromedriver wird benötigt. Ablageverzeichnis evtl noch anpassen.&#10;Nur bis jetzt von einer Aktie\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702404576477</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702404576477</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Data Extraction Code V1&#10;Chromedriver wird benötigt. Ablageverzeichnis evtl noch anpassen.&#10;Nur bis jetzt von einer Aktie\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702404777370</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702404777370</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"fixed Datum Extraction&#10;added requirements.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702408370930</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702408370930</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Added Mlflow and Ludwig base structure file&#10;added new directories&#10;added new packages requirements.txt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702472111878</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702472111878</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Added others files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1702472370537</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1702472370537</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"New files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1704743825967</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1704743825967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Changes v1\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706457404324</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706457404324</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"added seperate ludwig run file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706460901283</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706460901283</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"changed code in file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706465737606</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706465737607</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"some changes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706469845233</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706469845233</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"Updated the Ludwig train files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707413739926</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707413739926</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Updated Script to get Model Config from Bucket\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707915073825</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707915073825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Clean-up für Default MLCore\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708260182767</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708260182767</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Added clearing the temp folder\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708265480417</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708265480417</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Added mlflow for the experimentation part\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708453613589</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708453613589</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Added log metric function and others for mlflow for the experimentation part\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1708701354721</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1708701354721</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Created a Docker Base for the MLDate Download\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709383731744</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709383731744</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"Added the MlFlow server in the Dockerfile\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709395482698</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709395482698</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Changes and Ready to create a Docker Image. docker run -p 8080:8080 mlopsmlflowserver\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709474220299</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709474220299</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"adapt Host\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709474630548</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709474630548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Finalisiert! Kann als fertiger Dockercontainer aufgesetzt werden. MLFLow Tracking Server läuft. Daten werden jede Minute aus dem Bucket gezogen\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709567437548</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709567437548</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Finalisiert! Kann als fertiger Dockercontainer aufgesetzt werden. MLFLow Tracking Server läuft. Daten werden jede Minute aus dem Bucket gezogen\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710078959131</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710078959131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Cleanup Branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715155176028</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715155176028</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Merged Add to MLCore branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715158098215</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715158098215</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Merged Add to MLCore branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715158308946</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715158308946</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Merged Add to MLCore branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715158548261</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715158548261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Merged Add to MLCore branch\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715158650123</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715158650123</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"MLCore\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/MLCore\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Data Extraction Code V1&#10;Chromedriver wird benötigt. Ablageverzeichnis evtl noch anpassen.&#10;Nur bis jetzt von einer Aktie\" />\r\n    <MESSAGE value=\"fixed Datum Extraction&#10;added requirements.txt\" />\r\n    <MESSAGE value=\"Added Mlflow and Ludwig base structure file&#10;added new directories&#10;added new packages requirements.txt\" />\r\n    <MESSAGE value=\"Added others files\" />\r\n    <MESSAGE value=\"New files\" />\r\n    <MESSAGE value=\"Changes v1\" />\r\n    <MESSAGE value=\"added seperate ludwig run file\" />\r\n    <MESSAGE value=\"changed code in file\" />\r\n    <MESSAGE value=\"some changes\" />\r\n    <MESSAGE value=\"Updated the Ludwig train files\" />\r\n    <MESSAGE value=\"Updated Script to get Model Config from Bucket\" />\r\n    <MESSAGE value=\"Clean-up für Default MLCore\" />\r\n    <MESSAGE value=\"Added clearing the temp folder\" />\r\n    <MESSAGE value=\"Added mlflow for the experimentation part\" />\r\n    <MESSAGE value=\"Added log metric function and others for mlflow for the experimentation part\" />\r\n    <MESSAGE value=\"Created a Docker Base for the MLDate Download\" />\r\n    <MESSAGE value=\"Added the MlFlow server in the Dockerfile\" />\r\n    <MESSAGE value=\"Changes and Ready to create a Docker Image. docker run -p 8080:8080 mlopsmlflowserver\" />\r\n    <MESSAGE value=\"adapt Host\" />\r\n    <MESSAGE value=\"Finalisiert! Kann als fertiger Dockercontainer aufgesetzt werden. MLFLow Tracking Server läuft. Daten werden jede Minute aus dem Bucket gezogen\" />\r\n    <MESSAGE value=\"Cleanup Branch\" />\r\n    <MESSAGE value=\"Merged Add to MLCore branch\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Merged Add to MLCore branch\" />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$data_extraction.coverage\" NAME=\"data_extraction Coverage Results\" MODIFIED=\"1702484164463\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$Data_Extraction.coverage\" NAME=\"Data_Extraction Coverage Results\" MODIFIED=\"1702407781357\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$docker_train_ludwig_model.coverage\" NAME=\"docker_train_ludwig_model Coverage Results\" MODIFIED=\"1707914736302\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/Docker_Train_Model\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$predict_ludwig_model.coverage\" NAME=\"predict_ludwig_model Coverage Results\" MODIFIED=\"1707152506321\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$trackingfiles_download.coverage\" NAME=\"trackingfiles_download Coverage Results\" MODIFIED=\"1709493326397\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$data_preprocessing.coverage\" NAME=\"data_preprocessing Coverage Results\" MODIFIED=\"1703080833046\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$train_ludwig_model.coverage\" NAME=\"train_ludwig_model Coverage Results\" MODIFIED=\"1708264889179\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n    <SUITE FILE_PATH=\"coverage/MLOPS$train_ludwig_model__1_.coverage\" NAME=\"train_ludwig_model (1) Coverage Results\" MODIFIED=\"1715160076375\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/src\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3f6a486a65685784c8728251e70fa9ed46115a6d)
+++ b/.idea/workspace.xml	(date 1715783781715)
@@ -4,7 +4,21 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7129941a-7e3c-46d3-aeda-e70cd3d18c72" name="Changes" comment="Merged Add to MLCore branch" />
+    <list default="true" id="7129941a-7e3c-46d3-aeda-e70cd3d18c72" name="Changes" comment="fix wrong file env path">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_09_57__Changes_2.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_40__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_42__Changes_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_08_05_2024_10_43__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_43__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_05_2024_10_44__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/mlflow-tracking-server/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/mlflow-tracking-server/Dockerfile" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/mlflow-tracking-server/trackingfiles_download.py" beforeDir="false" afterPath="$PROJECT_DIR$/mlflow-tracking-server/trackingfiles_download.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -33,7 +47,7 @@
     <option name="PREVIEW_PUSH_PROTECTED_ONLY" value="true" />
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="MLCore" />
+        <entry key="$PROJECT_DIR$" value="DagsterPipelineProdRun" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -73,7 +87,7 @@
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
     &quot;git-widget-placeholder&quot;: &quot;DagsterPipelineProdRun&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/simon/PycharmProjects/MLOPS&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/simon/PycharmProjects/MLOPS/mlflow-tracking-server&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
@@ -84,14 +98,15 @@
 }</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\simon\PycharmProjects\MLOPS\mlflow-tracking-server" />
       <recent name="C:\Users\simon\PycharmProjects\MLOPS\Docker_Train_Model" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="C:\Users\simon\PycharmProjects\MLOPS" />
+      <recent name="C:\Users\simon\PycharmProjects\MLOPS\mlflow-tracking-server" />
       <recent name="C:\Users\simon\PycharmProjects\MLOPS\ludwig_configs" />
       <recent name="C:\Users\simon\PycharmProjects\MLOPS\ludwig_config_yamls" />
-      <recent name="C:\Users\simon\PycharmProjects\MLOPS" />
       <recent name="C:\Users\simon\PycharmProjects\MLOPS\src" />
-      <recent name="C:\Users\simon\PycharmProjects\MLOPS\Docker_Train_Model" />
     </key>
   </component>
   <component name="RunManager" selected="Python.train_ludwig_model (1)">
@@ -330,6 +345,11 @@
       <workItem from="1715154591658" duration="4429000" />
       <workItem from="1715159480548" duration="1159000" />
       <workItem from="1715160663248" duration="1972000" />
+      <workItem from="1715178950892" duration="4516000" />
+      <workItem from="1715357320097" duration="4629000" />
+      <workItem from="1715436135493" duration="44000" />
+      <workItem from="1715616113873" duration="763000" />
+      <workItem from="1715616921118" duration="3977000" />
     </task>
     <task id="LOCAL-00001" summary="Data Extraction Code V1&#10;Chromedriver wird benötigt. Ablageverzeichnis evtl noch anpassen.&#10;Nur bis jetzt von einer Aktie">
       <option name="closed" value="true" />
@@ -547,7 +567,63 @@
       <option name="project" value="LOCAL" />
       <updated>1715158650123</updated>
     </task>
-    <option name="localTasksCounter" value="28" />
+    <task id="LOCAL-00028" summary="Adapt Training Code and add new ENV Variables">
+      <option name="closed" value="true" />
+      <created>1715180572349</created>
+      <option name="number" value="00028" />
+      <option name="presentableId" value="LOCAL-00028" />
+      <option name="project" value="LOCAL" />
+      <updated>1715180572349</updated>
+    </task>
+    <task id="LOCAL-00029" summary="Add Files for MLFlow tracking server">
+      <option name="closed" value="true" />
+      <created>1715181778258</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1715181778258</updated>
+    </task>
+    <task id="LOCAL-00030" summary="add comments to training code">
+      <option name="closed" value="true" />
+      <created>1715182628707</created>
+      <option name="number" value="00030" />
+      <option name="presentableId" value="LOCAL-00030" />
+      <option name="project" value="LOCAL" />
+      <updated>1715182628707</updated>
+    </task>
+    <task id="LOCAL-00031" summary="add docker compose to mlflow tracking server directory">
+      <option name="closed" value="true" />
+      <created>1715361593259</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1715361593259</updated>
+    </task>
+    <task id="LOCAL-00032" summary="add requirements.txt">
+      <option name="closed" value="true" />
+      <created>1715362064900</created>
+      <option name="number" value="00032" />
+      <option name="presentableId" value="LOCAL-00032" />
+      <option name="project" value="LOCAL" />
+      <updated>1715362064900</updated>
+    </task>
+    <task id="LOCAL-00033" summary="add serving directory and files">
+      <option name="closed" value="true" />
+      <created>1715363745861</created>
+      <option name="number" value="00033" />
+      <option name="presentableId" value="LOCAL-00033" />
+      <option name="project" value="LOCAL" />
+      <updated>1715363745861</updated>
+    </task>
+    <task id="LOCAL-00034" summary="fix wrong file env path">
+      <option name="closed" value="true" />
+      <created>1715620059983</created>
+      <option name="number" value="00034" />
+      <option name="presentableId" value="LOCAL-00034" />
+      <option name="project" value="LOCAL" />
+      <updated>1715620059983</updated>
+    </task>
+    <option name="localTasksCounter" value="35" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -592,11 +668,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Data Extraction Code V1&#10;Chromedriver wird benötigt. Ablageverzeichnis evtl noch anpassen.&#10;Nur bis jetzt von einer Aktie" />
-    <MESSAGE value="fixed Datum Extraction&#10;added requirements.txt" />
-    <MESSAGE value="Added Mlflow and Ludwig base structure file&#10;added new directories&#10;added new packages requirements.txt" />
-    <MESSAGE value="Added others files" />
-    <MESSAGE value="New files" />
     <MESSAGE value="Changes v1" />
     <MESSAGE value="added seperate ludwig run file" />
     <MESSAGE value="changed code in file" />
@@ -614,7 +685,15 @@
     <MESSAGE value="Finalisiert! Kann als fertiger Dockercontainer aufgesetzt werden. MLFLow Tracking Server läuft. Daten werden jede Minute aus dem Bucket gezogen" />
     <MESSAGE value="Cleanup Branch" />
     <MESSAGE value="Merged Add to MLCore branch" />
-    <option name="LAST_COMMIT_MESSAGE" value="Merged Add to MLCore branch" />
+    <MESSAGE value="adapt train script" />
+    <MESSAGE value="Adapt Training Code and add new ENV Variables" />
+    <MESSAGE value="Add Files for MLFlow tracking server" />
+    <MESSAGE value="add comments to training code" />
+    <MESSAGE value="add docker compose to mlflow tracking server directory" />
+    <MESSAGE value="add requirements.txt" />
+    <MESSAGE value="add serving directory and files" />
+    <MESSAGE value="fix wrong file env path" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix wrong file env path" />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
     <SUITE FILE_PATH="coverage/MLOPS$data_extraction.coverage" NAME="data_extraction Coverage Results" MODIFIED="1702484164463" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
@@ -624,6 +703,6 @@
     <SUITE FILE_PATH="coverage/MLOPS$trackingfiles_download.coverage" NAME="trackingfiles_download Coverage Results" MODIFIED="1709493326397" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
     <SUITE FILE_PATH="coverage/MLOPS$data_preprocessing.coverage" NAME="data_preprocessing Coverage Results" MODIFIED="1703080833046" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
     <SUITE FILE_PATH="coverage/MLOPS$train_ludwig_model.coverage" NAME="train_ludwig_model Coverage Results" MODIFIED="1708264889179" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
-    <SUITE FILE_PATH="coverage/MLOPS$train_ludwig_model__1_.coverage" NAME="train_ludwig_model (1) Coverage Results" MODIFIED="1715160076375" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
+    <SUITE FILE_PATH="coverage/MLOPS$train_ludwig_model__1_.coverage" NAME="train_ludwig_model (1) Coverage Results" MODIFIED="1715170933325" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/src" />
   </component>
 </project>
\ No newline at end of file
